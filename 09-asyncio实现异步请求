# -*- coding:utf-8 -*-

import asyncio,socket
from urllib.parse import urlparse

async def get_url(url):
    newL = urlparse(url)
    path = newL.path
    host = newL.netloc
    print(host,path)
    if path=="":
        path = "/"
    # exec = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    # exec.connect((host,80))
    reader, writer=await asyncio.open_connection(host,80)
    writer.write("GET {} HTTP/1.1\r\nHost:{}\r\nConnection:close\r\n\r\n".format(path,host).encode("utf8"))
    all_lines=[]
    async for line in reader:
        data = line.decode("utf8")
        all_lines.append(data)
    html = "".join(all_lines)
    return html

async def main():
    tasks = []
    for _ in range(10):
        task = asyncio.ensure_future(get_url("http://www.baidu.com"))
        tasks.append(task)
    for task in asyncio.as_completed(tasks):
        result = await task
        print(result)


if __name__=="__main__":
    import time
    startT = time.time()
    loop = asyncio.get_event_loop()
    loop.run_until_complete(main())
    print("last_time{}".format(time.time()-startT))
