# -*- coding:utf-8 -*-

from tornado import httpclient
import tornado
import asyncio
#同步
# http_client = httpclient.HTTPClient()
# try:
#     response = http_client.fetch("http://www.baidu.com/")
#     # print(response.body)
#     temp = response.body.decode("utf8")
#     print(temp)
# except httpclient.HTTPError as e:
#     # HTTPError is raised for non-200 responses; the response
#     # can be found in e.response.
#     print("Error: " + str(e))
# except Exception as e:
#     # Other errors are possible, such as IOError.
#     print("Error: " + str(e))
# http_client.close()

#异步请求
async def f():
    http_client = httpclient.AsyncHTTPClient()
    try:
        response = await http_client.fetch("http://www.baidu.com")
        # print(response.body.decode("utf8"))
    except Exception as e:
        print("Error: %s" % e)
    else:
        print(response.body.decode("utf8"))

if __name__=="__main__":
    io_loop = tornado.ioloop.IOLoop.current()
    #运行完就会结束
    io_loop.run_sync(f)
    # loop = asyncio.get_event_loop()
    # loop.run_until_complete(f())
